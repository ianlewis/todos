# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: SLSA Go releaser
on:
  release:
    types: [created]

permissions: {}

jobs:
  # Validate the release and generate ldflags dynamically.
  validate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      tag: ${{ steps.ldflags.outputs.tag }}
      version: ${{ steps.ldflags.outputs.version }}
    steps:
      - id: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: "package.json"
      - id: ldflags
        run: |
          set -euo pipefail

          version_tag=$(git describe --tags --always --dirty)
          version=$(echo "${version_tag}" | sed -E 's/^v([0-9]+.[0-9]+.[0-9]+)(.*)/\1/')
          exit_code=0
          if ! grep "${version_tag}" CHANGELOG.md >/dev/null; then
            echo >&2 "${version_tag} must be included in the CHANGELOG.md"
            exit_code=1
          fi

          # Check the npm package versions.
          NPM_VERSIONS_JSON=$(npm version --workspaces)
          for os in linux darwin windows; do
            for arch in amd64 arm64; do
              npm_version=$(echo "${NPM_VERSIONS_JSON}" | jq -r ".\"@ianlewis/todos-${os}-${arch}\"")
              if [[ "${npm_version}" != "${version}" ]]; then
                echo >&2 "npm package @ianlewis/todos-${os}-${arch} version ${npm_version} does not match release version ${version}"
                exit_code=1
              fi
            done
          done

          echo "version=${version}" >> "$GITHUB_OUTPUT"
          echo "tag=${version_tag}" >> "$GITHUB_OUTPUT"
          exit "${exit_code}"

  build-todos:
    name: todos-${{matrix.os}}-${{matrix.arch}}
    needs: [validate]
    strategy:
      matrix:
        os:
          - linux
          - windows
          - darwin
        arch:
          - amd64
          - arm64
    permissions:
      id-token: write # To sign.
      contents: write # To upload release assets.
      actions: read # To read workflow path.
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@v2.1.0
    with:
      go-version-file: "go.mod"
      config-file: ".slsa-goreleaser/todos-${{matrix.os}}-${{matrix.arch}}.yml"
      evaluated-envs: "VERSION:${{needs.validate.outputs.tag}}"

  npm-publish:
    needs: [validate, build-todos]
    runs-on: ubuntu-latest
    permissions:
      id-token: write # To sign.
    steps:
      - id: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: |
          set -euo pipefail

          # Publish to npm.
          npm publish \
            --provenance \
            --workspaces \
            --access public \
            --tag "${version}"
