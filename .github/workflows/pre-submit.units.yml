# Copyright 2023 Google LLC
# Copyright 2024 Ian Lewis
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: tests

on:
  push:
    branches: [main]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read # Needed to check out the repo.

jobs:
  # Unit tests for Go code
  ######################################

  unit-tests-matrix:
    name: unit tests
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: "go.mod"
      - name: unit tests
        run: make go-test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5.3.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out
          fail_ci_if_error: true

  # NOTE: needed for protected branch checks.
  unit-tests:
    runs-on: ubuntu-latest
    needs: [unit-tests-matrix]
    if: ${{ always() }}
    env:
      UNIT_TESTS_RESULT: ${{ needs.unit-tests-matrix.result }}
    steps:
      - run: |
          [ "${UNIT_TESTS_RESULT}" == "success" ]

  # Check license headers
  ###############################

  license-headers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: mbrukman/autogen
          ref: 9026b78e17573b5dda4bff79033c352443551dc5
          path: autogen
      - run: |
          echo "${GITHUB_WORKSPACE}/autogen" >> "${GITHUB_PATH}"
      - run: |
          git config user.name "Unknown"
          make license-headers
      - name: check diff
        run: |
          set -euo pipefail
          if [ "$(GIT_PAGER="cat" git diff --ignore-space-at-eol | wc -l)" -gt "0" ]; then
              echo "Detected license header changes.  See status below:"
              GIT_PAGER="cat" git diff
              exit 1
          fi

  # formatting
  ###############################

  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version-file: "package.json"
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: "go.mod"
      - run: go install mvdan.cc/gofumpt@v0.7.0
      - run: go install github.com/daixiang0/gci@v0.13.5
      - run: make format
      - name: check diff
        run: |
          set -euo pipefail
          if [ "$(GIT_PAGER="cat" git diff --ignore-space-at-eol | wc -l)" -gt "0" ]; then
              echo "Detected formatting changes.  See status below:"
              GIT_PAGER="cat" git diff
              exit 1
          fi

  # linters
  ###############################

  actionlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: actionlint
        env:
          SHELLCHECK_VERSION: "0.10.0"
          SHELLCHECK_CHECKSUM: "6c881ab0698e4e6ea235245f22832860544f17ba386442fe7e9d629f8cbedf87"
          ACTIONLINT_VERSION: "1.7.3"
          ACTIONLINT_CHECKSUM: "37252b4d440b56374b0fc1726e05fd7452d30d6d774f6e9b52e65bb64475f9db"
        run: |
          set -euo pipefail

          # Install shellcheck
          curl -sSLo shellcheck.tar.gz "https://github.com/koalaman/shellcheck/releases/download/v${SHELLCHECK_VERSION}/shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz"
          echo "shellcheck checksum is $(sha256sum shellcheck.tar.gz | awk '{ print $1 }')"
          echo "expected checksum is $SHELLCHECK_CHECKSUM"
          echo "$SHELLCHECK_CHECKSUM  shellcheck.tar.gz" | sha256sum --strict --check --status || exit 1

          tar xf shellcheck.tar.gz
          mv "shellcheck-v${SHELLCHECK_VERSION}/shellcheck" /usr/local/bin

          # Install actionlint
          curl -sSLo actionlint.tar.gz "https://github.com/rhysd/actionlint/releases/download/v${ACTIONLINT_VERSION}/actionlint_${ACTIONLINT_VERSION}_linux_amd64.tar.gz"
          echo "actionlint checksum is $(sha256sum actionlint.tar.gz | awk '{ print $1 }')"
          echo "expected checksum is $ACTIONLINT_CHECKSUM"
          echo "$ACTIONLINT_CHECKSUM  actionlint.tar.gz" | sha256sum --strict --check --status || exit 1

          tar xf actionlint.tar.gz
          mv ./actionlint /usr/local/bin

          make actionlint

  markdownlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version-file: "package.json"
      - run: make markdownlint

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: make yamllint

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: "go.mod"
      - env:
          GOLANGCI_LINT_VERSION: "1.61.0"
          GOLANGCI_LINT_CHECKSUM: "77cb0af99379d9a21d5dc8c38364d060e864a01bd2f3e30b5e8cc550c3a54111"
        run: |
          set -euo pipefail

          #Install golangci-lint
          curl -sSLo golangci-lint.tar.gz "https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_LINT_VERSION}/golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz"
          echo "golangci-lint checksum is $(sha256sum golangci-lint.tar.gz | awk '{ print $1 }')"
          echo "expected checksum is $GOLANGCI_LINT_CHECKSUM"
          echo "$GOLANGCI_LINT_CHECKSUM  golangci-lint.tar.gz" | sha256sum --strict --check --status || exit 1
          tar xf golangci-lint.tar.gz
          mv "golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64/golangci-lint" /usr/local/bin

          # Run golangci-lint
          make golangci-lint

  SUPPORTED_LANGUAGES:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: "go.mod"
      - run: |
          set -euo pipefail

          make SUPPORTED_LANGUAGES.md

          if [ "$(GIT_PAGER="cat" git diff --ignore-space-at-eol | wc -l)" -gt "0" ]; then
              echo "Detected SUPPORTED_LANGUAGES.md changes. See status below:"
              GIT_PAGER="cat" git diff
              exit 1
          fi
