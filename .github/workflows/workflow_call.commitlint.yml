# Copyright 2025 Ian Lewis
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: commitlint

on:
  workflow_call:
    inputs:
      from_ref:
        type: string
        required: false
        default: ${{ github.event.pull_request.base.sha }}
      to_ref:
        type: string
        required: false
        default: ${{ github.event.pull_request.head.sha }}

permissions:
  contents: read

jobs:
  commitlint:
    name: commitlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: 0 # Fetch all history for all branches and tags

      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version-file: ".node-version"

      # NOTE: actions/checkout does not set up local branches
      - run: |
          # Fetch the HEAD ref. This is necessary to get the correct default
          # branch.
          git remote set-head origin --auto

          # Create local branches for all remote branches except pull requests.
          set -euo pipefail
          current_branch=$(git rev-parse --abbrev-ref HEAD)
          for remote_branch in $(git branch -r | grep -v "\->" | grep -v -e "^\s*pull/"); do
            local_branch=$(echo "${remote_branch}" | sed 's/origin\///')
            if [[ "${local_branch}" == "${current_branch}" ]]; then
              continue
            fi
            git branch --track "${local_branch}" "${remote_branch}"
          done

      - name: commitlint
        env:
          COMMITLINT_FROM_REF: ${{ inputs.from_ref }}
          COMMITLINT_TO_REF: ${{ inputs.to_ref }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make commitlint
