# Copyright 2025 Ian Lewis
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Go unit tests

on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true

permissions:
  contents: read

jobs:
  unit-test-matrix:
    name: unit tests
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    runs-on: ${{ matrix.os }}
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "go.mod"

      - name: unit tests (linux/windows)
        if: ${{ matrix.os != 'macos-latest' }}
        run: |
          make unit-test

      - name: unit tests (macos)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install \
            make \
            grep \
            gawk \
            coreutils \
            libyaml \
            xz
          gmake unit-test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out
          fail_ci_if_error: true

  # NOTE: needed for protected branch checks.
  unit-test:
    name: unit-test
    runs-on: ubuntu-latest
    needs: [unit-test-matrix]
    if: ${{ always() }}
    env:
      UNIT_TESTS_RESULT: ${{ needs.unit-test-matrix.result }}
    steps:
      - run: |
          [ "${UNIT_TESTS_RESULT}" == "success" ]
