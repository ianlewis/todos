# Copyright 2024 Ian Lewis
# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
run:
  concurrency: 2
  deadline: 5m
issues:
  include:
    - EXC0012
    - EXC0013
    - EXC0014
    - EXC0015
  # Maximum issues count per one linter.
  # Set to 0 to disable.
  # Default: 50
  max-issues-per-linter: 0
  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 0
  new-from-rev: ""
linters:
  disable-all: true
  enable:
    # Enabled by default
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - unused

    # Disabled by default
    - asasalint # Check for pass []any as any in variadic func(...any).
    - asciicheck # Checks that all code identifiers does not have non-ASCII symbols in the name.
    - bidichk # Checks for dangerous unicode character sequences.
    - bodyclose # Checks whether HTTP response body is closed successfully.
    - canonicalheader # Canonicalheader checks whether net/http.Header uses canonical header.
    - containedctx # Containedctx is a linter that detects struct contained context.Context field.
    - contextcheck # Check whether the function uses a non-inherited context.
    - copyloopvar # A linter detects places where loop variables are copied.
    - cyclop # Checks function and package cyclomatic complexity.
    - decorder # Check declaration order and count of types, constants, variables and functions.
    - depguard # Go linter that checks if package imports are in a list of acceptable packages.
    - dogsled # Checks assignments with too many blank identifiers (e.g. x, , , _, := f()).
    - dupl # Detects duplicate fragments of code.
    - dupword # Checks for duplicate words in the source code.
    - durationcheck # Check for two durations multiplied together.
    - err113 # Go linter to check the errors handling expressions.
    - errchkjson # Checks types passed to the json encoding functions. Reports unsupported types and reports occurrences where the check for the returned error can be omitted.
    - errname # Checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error.
    - errorlint # Errorlint is a linter for that can be used to find code that will cause problems with the error wrapping scheme introduced in Go 1.13.
    - exhaustive # Check exhaustiveness of enum switch statements.
    # NOTE: exhaustruct is useful based on preferences but is very noisy for
    #       deliberately omitted nil values.
    # - exhaustruct # Checks if all structure fields are initialized.
    - exptostd # Detects functions from golang.org/x/exp/ that can be replaced by std functions.
    - fatcontext # Detects nested contexts in loops and function literals.
    # NOTE: forbidigo is useful based on your preferences and configuration.
    # - forbidigo # Forbids identifiers.
    - forcetypeassert # Finds forced type assertions.
    # NOTE: funlen operates on a very simple and inflexible length-based rule.
    #       Other complexity checkers are better.
    # - funlen # Checks for long functions.
    - gci # Checks if code and import statements are formatted, with additional rules.
    - ginkgolinter # Enforces standards of using ginkgo and gomega.
    - gocheckcompilerdirectives # Checks that go compiler directive comments (//go:) are valid.
    - gochecknoglobals # Check that no global variables exist.
    - gochecknoinits # Checks that no init functions are present in Go code.
    - gochecksumtype # Run exhaustiveness checks on Go "sum types".
    - gocognit # Computes and checks the cognitive complexity of functions.
    - goconst # Finds repeated strings that could be replaced by a constant.
    - gocritic # Provides diagnostics that check for bugs, performance and style issues.
    # NOTE: gocyclo is useful but functionality overlaps with cyclop.
    # - gocyclo # Computes and checks the cyclomatic complexity of functions.
    - godot # Check if comments end in a period.
    - godox # Detects usage of FIXME, TODO and other keywords inside comments.
    - gofmt # Checks if the code is formatted according to 'gofmt' command.
    - gofumpt # Checks if code and import statements are formatted, with additional rules.
    - goheader # Checks if file header matches to pattern.
    - goimports # Checks if the code and import statements are formatted according to the 'goimports' command.
    - gomoddirectives # Manage the use of 'replace', 'retract', and 'excludes' directives in go.mod.
    - gomodguard # Allow and block list linter for direct Go module dependencies. This is different from depguard where there are different block types for example version constraints and module recommendations.
    - goprintffuncname # Checks that printf-like functions are named with f at the end.
    - gosec # Inspects source code for security problems.
    - gosmopolitan # Report certain i18n/l10n anti-patterns in your Go codebase.
    - grouper # Analyze expression groups.
    - iface # Detect the incorrect use of interfaces, helping developers avoid interface pollution.
    - importas # Enforces consistent import aliases.
    - inamedparam # Reports interfaces with unnamed method parameters.
    - interfacebloat # A linter that checks the number of methods inside an interface.
    - intrange # Intrange is a linter to find places where for loops could make use of an integer range.
    # ireturn seems to be somewhat buggy and doesn't produce many helpful
    # results.
    # - ireturn # Accept Interfaces, Return Concrete Types.
    - lll # Reports long lines.
    - loggercheck # Checks key value pairs for common logger libraries (kitlog,klog,logr,zap).
    # maintidx doesn't add much above using gocyclo, cyclop, and gocognit.
    # - maintidx # Maintidx measures the maintainability index of each function.
    - makezero # Finds slice declarations with non-zero initial length.
    - mirror # Reports wrong mirror patterns of bytes/strings usage.
    - misspell # Finds commonly misspelled English words.
    - mnd # An analyzer to detect magic numbers.
    - musttag # Enforce field tags in (un)marshaled structs.
    - nakedret # Checks that functions with naked returns are not longer than a maximum size (can be zero).
    - nestif # Reports deeply nested if statements.
    - nilerr # Finds the code that returns nil even if it checks that the error is not nil.
    - nilnesserr # Reports constructs that checks for err != nil, but returns a different nil value error. Powered by nilness and nilerr.
    - nilnil # Checks that there is no simultaneous return of nil error and an invalid value.
    # NOTE: nlreturn could be enabled based on your preferences but is noisy otherwise.
    # - nlreturn # Nlreturn checks for a new line before return and branch statements to increase code clarity.
    - noctx # Finds sending http request without context.Context.
    - nolintlint # Reports ill-formed or insufficient nolint directives.
    - nonamedreturns # Reports all named returns.
    - nosprintfhostport # Checks for misuse of Sprintf to construct a host with port in a URL.
    - paralleltest # Detects missing usage of t.Parallel() method in your Go test.
    - perfsprint # Checks that fmt.Sprintf can be replaced with a faster alternative.
    - prealloc # Finds slice declarations that could potentially be pre-allocated.
    - predeclared # Find code that shadows one of Go's predeclared identifiers.
    - promlinter # Check Prometheus metrics naming via promlint.
    - protogetter # Reports direct reads from proto message fields when getters should be used.
    - reassign # Checks that package variables are not reassigned.
    - recvcheck # Checks for receiver type consistency.
    # TODO(#1678): Enable revive linter.
    # - revive # Fast, configurable, extensible, flexible, and beautiful linter for Go. Drop-in replacement of golint.
    - rowserrcheck # Checks whether Rows.Err of rows is checked successfully.
    - sloglint # Ensure consistent code style when using log/slog.
    - spancheck # Checks for mistakes with OpenTelemetry/Census spans.
    - sqlclosecheck # Checks that sql.Rows, sql.Stmt, sqlx.NamedStmt, pgx.Query are closed.
    - stylecheck # Stylecheck is a replacement for golint.
    - tagalign # Check that struct tags are well aligned.

    # NOTE: tagliatelle is useful but requires configuration based on your preferences.
    # - tagliatelle # Checks the struct tags.
    - testableexamples # Linter checks if examples are testable (have an expected output).
    - testifylint # Checks usage of github.com/stretchr/testify.
    # NOTE: Blackbox testing shouldn't necessarily be enforced and sometimes hinders full test coverage.
    # - testpackage # Linter that makes you use a separate test package.
    - thelper # Thelper detects tests helpers which is not start with t.Helper() method.
    - tparallel # Tparallel detects inappropriate usage of t.Parallel() method in your Go test codes.
    - unconvert # Remove unnecessary type conversions.
    - unparam # Reports unused function parameters. unused    v1.9.0
    - usestdlibvars # A linter that detect the possibility to use variables/constants from the Go standard library.
    # TODO(#1678): Enable usetesting linter.
    # - usetesting # Reports uses of functions with replacement inside the testing package.
    # NOTE: varnamelen isn't bad necessarily, but it is very noisy.
    # TODO(#1678): Enable varnamelen linter.
    # - varnamelen # Checks that the length of a variable's name matches its scope.
    - wastedassign # Finds wasted assignment statements.
    - whitespace # Whitespace is a linter that checks for unnecessary newlines at the start and end of functions, if, for, etc.
    - wrapcheck # Checks that errors returned from external packages are wrapped.
    # NOTE: wsl isn't bad necessarily, but it can be very noisy.
    # TODO(#1678): Enable wsl linter.
    # - wsl # Add or remove empty lines.
    - zerologlint # Detects the wrong usage of zerolog that a user forgets to dispatch with Send or Msg.

    # Duplicate feature in another linter. Replaced by usetesting.
    # - ten
linters-settings:
  cyclop:
    # Increased preserve some semblance of sanity.
    max-complexity: 30
    # TODO(#1725): Reduce package average complexity.
    package-average: 6.0

  depguard:
    rules:
      main:
        files:
          - $all
          - "!$test"
        allow:
          # Go standard library
          - $gostd

          # This project.
          - "github.com/ianlewis/todos"

          # Dependencies.
          - "github.com/fatih/color"
          - "github.com/go-enry/go-enry/v2"
          - "github.com/go-git/go-git/v5"
          - "github.com/gobwas/glob"
          - "github.com/ianlewis/runeio"
          - "github.com/saintfish/chardet"
          - "github.com/urfave/cli/v2"
          - "golang.org/x/text"
          - "gopkg.in/yaml.v1"
          - "sigs.k8s.io/release-utils/version"
        deny:
          - pkg: "github.com/ianlewis/todos/internal/testutils"
            desc: Please don't use testutils package
          - pkg: "reflect"
            desc: Please don't use reflect package
          - pkg: "unsafe"
            desc: Please don't use unsafe package
      test:
        files:
          - $test
        allow:
          # Go standard library
          - $gostd

          # This project.
          - "github.com/ianlewis/todos"

          # Dependencies.
          - "github.com/gobwas/glob"
          - "github.com/google/go-cmp/cmp"
          - "github.com/google/go-github"
          - "github.com/urfave/cli/v2"
          - "golang.org/x/text"
          - "github.com/migueleliasweb/go-github-mock/src/mock"
        deny:
          - pkg: "reflect"
            desc: Use go-cmp instead.
          - pkg: "unsafe"
            desc: Please don't use unsafe package

  errcheck:
    check-type-assertions: true
    check-blank: true

  gocognit:
    # Minimal code complexity to report
    # Increased beyond default to support table-driven tests and to preserve
    # some semblance of sanity.
    min-complexity: 40

  nestif:
    # Increased beyond default to preserve some semblance of sanity.
    min-complexity: 8

  govet:
    disable:
      # Too strict.
      - fieldalignment
    enable:
      - shadow

  godox:
    keywords:
      - BUG
      - FIXME
      - HACK
      - XXX

  gci:
    sections:
      - standard
      - default
      - prefix(github.com/ianlewis/todos)

  gocritic:
    disable-all: true
    enabled-checks:
      # Diagnostic
      - appendAssign
      - argOrder
      - badCond
      - caseOrder
      - codegenComment
      - commentedOutCode
      - deprecatedComment
      - dupArg
      - dupBranchBody
      - dupCase
      - dupSubExpr
      - exitAfterDefer
      - flagDeref
      - flagName
      - nilValReturn
      - offBy1
      - sloppyReassign
      - weakCond
      - octalLiteral

      # Performance
      - appendCombine
      - equalFold
      - hugeParam
      - indexAlloc
      - rangeExprCopy
      - rangeValCopy

      # Style
      - assignOp
      - boolExprSimplify
      - captLocal
      - commentFormatting
      - commentedOutImport
      - defaultCaseOrder
      - docStub
      - elseif
      - emptyFallthrough
      - emptyStringTest
      - hexLiteral
      - ifElseChain
      - methodExprCall
      - regexpMust
      - singleCaseSwitch
      - sloppyLen
      - stringXbytes
      - switchTrue
      - typeAssertChain
      - typeSwitchVar
      - underef
      - unlabelStmt
      - unlambda
      - unslice
      - valSwap
      - wrapperFunc
      - yodaStyleExpr

      # Opinionated
      - builtinShadow
      - importShadow
      - initClause
      - nestingReduce
      - paramTypeCombine
      - ptrToRefParam
      - typeUnparen
      - unnecessaryBlock

  varnamelen:
    # Increased preserve some semblance of sanity.
    max-distance: 20
